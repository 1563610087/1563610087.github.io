(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{398:function(t,a,n){"use strict";n.r(a);var s=n(42),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"nginx"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[t._v("#")]),t._v(" nginx")]),t._v(" "),n("h2",{attrs:{id:"_1-介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-介绍"}},[t._v("#")]),t._v(" 1 介绍")]),t._v(" "),n("h3",{attrs:{id:"_1-1-什么是nginx"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-什么是nginx"}},[t._v("#")]),t._v(" 1.1 什么是nginx")]),t._v(" "),n("p",[t._v("Nginx是一款高性能的http 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器。由俄罗斯的程序设计师Igor Sysoev所开发，官方测试nginx能够支支撑5万并发链接，并且cpu、内存等资源消耗却非常低，运行非常稳定。")]),t._v(" "),n("h3",{attrs:{id:"_1-2-应用场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-应用场景"}},[t._v("#")]),t._v(" 1.2 应用场景")]),t._v(" "),n("p",[t._v("1、http服务器。Nginx是一个http服务可以独立提供http服务。可以做网页静态服务器。")]),t._v(" "),n("p",[t._v("2、虚拟主机。可以实现在一台服务器虚拟出多个网站。例如个人网站使用的虚拟主机。")]),t._v(" "),n("p",[t._v("3、反向代理，负载均衡。当网站的访问量达到一定程度后，单台服务器不能满足用户的请求时，需要用多台服务器集群可以使用nginx做反向代理。并且多台服务器可以平均分担负载，不会因为某台服务器负载高宕机而某台服务器闲置的情况。")]),t._v(" "),n("h2",{attrs:{id:"_2-安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-安装"}},[t._v("#")]),t._v(" 2 安装")]),t._v(" "),n("h3",{attrs:{id:"_2-1-下载"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-下载"}},[t._v("#")]),t._v(" 2.1 下载")]),t._v(" "),n("p",[t._v("windows下载："),n("a",{attrs:{href:"http://nginx.org/en/download.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://nginx.org/en/download.html"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("解压")]),t._v(" "),n("p",[n("img",{attrs:{src:"C:%5CUsers%5C%E5%93%88%E5%93%88%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1556594053769.png",alt:"1556594053769"}})]),t._v(" "),n("h3",{attrs:{id:"_2-2-启动"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-启动"}},[t._v("#")]),t._v(" 2.2 启动")]),t._v(" "),n("p",[t._v("(1)直接双击nginx.exe，双击后一个黑色的弹窗一闪而过")]),t._v(" "),n("p",[t._v("(2)打开cmd命令窗口，切换到nginx解压目录下，输入命令 nginx.exe 或者 start nginx ，回车即可")]),t._v(" "),n("h3",{attrs:{id:"_2-3-检查启动是否成功"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-检查启动是否成功"}},[t._v("#")]),t._v(" 2.3 检查启动是否成功")]),t._v(" "),n("p",[t._v("直接在浏览器地址栏输入网址 http://localhost:80，回车，出现以下页面说明启动成功")]),t._v(" "),n("p",[n("img",{attrs:{src:"C:%5CUsers%5C%E5%93%88%E5%93%88%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1556594259780.png",alt:"1556594259780"}})]),t._v(" "),n("h3",{attrs:{id:"_2-4-nginx命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-nginx命令"}},[t._v("#")]),t._v(" 2.4  nginx命令")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//测试配置文件格式是否正确")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//nginx -t")]),t._v("\n启动\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//nginx")]),t._v("\n重启\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//nginx -s reload")]),t._v("\n停止\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//nginx -s stop")]),t._v("\n")])])]),n("h2",{attrs:{id:"_3-配置文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-配置文件"}},[t._v("#")]),t._v(" 3 配置文件")]),t._v(" "),n("p",[t._v("配置文件：conf/nginx.conf")]),t._v(" "),n("p",[n("strong",[t._v("1. 全局块")])]),t._v(" "),n("p",[t._v("该部分配置主要影响Nginx全局，通常包括下面几个部分：")]),t._v(" "),n("ul",[n("li",[t._v("配置运行Nginx服务器用户（组）")]),t._v(" "),n("li",[t._v("worker process数")]),t._v(" "),n("li",[t._v("Nginx进程PID存放路径")]),t._v(" "),n("li",[t._v("错误日志的存放路径")]),t._v(" "),n("li",[t._v("配置文件的引入")])]),t._v(" "),n("p",[n("strong",[t._v("2. events块")])]),t._v(" "),n("p",[t._v("该部分配置主要影响Nginx服务器与用户的网络连接，主要包括：")]),t._v(" "),n("ul",[n("li",[t._v("设置网络连接的序列化")]),t._v(" "),n("li",[t._v("是否允许同时接收多个网络连接")]),t._v(" "),n("li",[t._v("事件驱动模型的选择")]),t._v(" "),n("li",[t._v("最大连接数的配置")])]),t._v(" "),n("p",[n("strong",[t._v("3. http块")])]),t._v(" "),n("ul",[n("li",[t._v("定义MIMI-Type")]),t._v(" "),n("li",[t._v("自定义服务日志")]),t._v(" "),n("li",[t._v("允许sendfile方式传输文件")]),t._v(" "),n("li",[t._v("连接超时时间")]),t._v(" "),n("li",[t._v("单连接请求数上限")])]),t._v(" "),n("p",[n("strong",[t._v("4. server块")])]),t._v(" "),n("ul",[n("li",[t._v("配置网络监听")]),t._v(" "),n("li",[t._v("基于名称的虚拟主机配置")]),t._v(" "),n("li",[t._v("基于IP的虚拟主机配置")])]),t._v(" "),n("p",[n("strong",[t._v("5. location块")])]),t._v(" "),n("ul",[n("li",[t._v("location配置")]),t._v(" "),n("li",[t._v("请求根目录配置")]),t._v(" "),n("li",[t._v("更改location的URI")]),t._v(" "),n("li",[t._v("网站默认首页配置")])]),t._v(" "),n("h2",{attrs:{id:"_4-配置虚拟主机"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-配置虚拟主机"}},[t._v("#")]),t._v(" 4 配置虚拟主机")]),t._v(" "),n("h2",{attrs:{id:"_5-反向代理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-反向代理"}},[t._v("#")]),t._v(" 5 反向代理")]),t._v(" "),n("h3",{attrs:{id:"_5-1-原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-原理"}},[t._v("#")]),t._v(" 5.1 原理")]),t._v(" "),n("p",[t._v("反向代理（Reverse Proxy）实际运行方式是指以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端，此时代理服务器对外就表现为一个服务器")]),t._v(" "),n("p",[n("img",{attrs:{src:"http://hi.csdn.net/attachment/201108/28/0_1314499568QMyS.gif",alt:"img"}})]),t._v(" "),n("p",[t._v("反向代理服务器接受用户的请求，并根据请求，将请求发送给不同的服务器，再将从服务器中获取的结果返回给用户。对于用户来说，并不知道自己访问的服务器是反向代理服务器")]),t._v(" "),n("h3",{attrs:{id:"_5-2-用途"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-用途"}},[t._v("#")]),t._v(" 5.2 用途")]),t._v(" "),n("ul",[n("li",[t._v("保证内网的安全，可以使用反向代理提供WAF功能，阻止web攻击大型网站，通常将反向代理作为公网访问地址，Web服务器是内网。")]),t._v(" "),n("li",[t._v("负载均衡，通过反向代理服务器来优化网站的负载")])]),t._v(" "),n("p",[n("img",{attrs:{src:"https://images2015.cnblogs.com/blog/305504/201611/305504-20161112124423530-566240666.png",alt:"img"}})]),t._v(" "),n("h2",{attrs:{id:"_6-负载均衡"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-负载均衡"}},[t._v("#")]),t._v(" 6 负载均衡")]),t._v(" "),n("h3",{attrs:{id:"_7-mac安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-mac安装"}},[t._v("#")]),t._v(" 7 mac安装")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('openssl\nA CA file has been bootstrapped using certificates from the SystemRoots\nkeychain. To add additional certificates (e.g. the certificates added in\nthe System keychain), place .pem files in\n  /usr/local/etc/openssl/certs\n\nand run\n  /usr/local/opt/openssl/bin/c_rehash\n\nopenssl is keg-only, which means it was not symlinked into /usr/local,\nbecause Apple has deprecated use of OpenSSL in favor of its own TLS and crypto libraries.\n\nIf you need to have openssl first in your PATH run:\n  echo \'export PATH="/usr/local/opt/openssl/bin:$PATH"\' >> ~/.bash_profile\n\nFor compilers to find openssl you may need to set:\n  export LDFLAGS="-L/usr/local/opt/openssl/lib"\n  export CPPFLAGS="-I/usr/local/opt/openssl/include"\n\n==> nginx\nDocroot is: /usr/local/var/www\n\nThe default port has been set in /usr/local/etc/nginx/nginx.conf to 8080 so that\nnginx can run without sudo.\n\nnginx will load all files in /usr/local/etc/nginx/servers/.\n\nTo have launchd start nginx now and restart at login:\n  brew services start nginx\nOr, if you don\'t want/need a background service you can just run:\n  nginx\n')])])])])}),[],!1,null,null,null);a.default=e.exports}}]);